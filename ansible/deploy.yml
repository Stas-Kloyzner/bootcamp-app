---
- name: run on resource group
  hosts: "{{ rg }}"
  gather_facts: false
  ignore_unreachable: true
  tasks:

    - name: update system
      shell: 'apt-get update && apt-get upgrade -y'
      become: yes
      ignore_unreachable: true
  
    - name: install node 14
      shell: 'curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - && sudo apt-get install -y nodejs'
      become: yes
      ignore_unreachable: true
      
    - name: install npm latest
      shell: 'npm install npm@latest -g '
      become: yes
      ignore_unreachable: true
      
    - name: install npm nodemon
      shell: 'sudo npm install nodemon -g '
      become: yes
      ignore_unreachable: true  
      
    - name: install unzip
      shell: 'sudo apt-get install unzip'
      become: yes
      ignore_unreachable: true
      
    - name:  copy artifact to remote
      copy:
        src: "{{ playbook_dir }}/../../_App_CI/wt-app/wt-app.zip"
        dest: ~/
      ignore_unreachable: true
        
    - name: clear app directory if present from previous deployment
      shell: 'sudo rm -r app '
      ignore_unreachable: true
      ignore_errors: yes
      
    - name: unzip artifact
      shell: 'mkdir app && unzip wt-app.zip -d ~/app && rm wt-app.zip'
      ignore_unreachable: true
      
    - name: ghrant access to app
      shell: 'chmod -R 777 app'
      ignore_unreachable: true
      
    - name: Creating a file with content
      copy:
        dest: "~/app/.env"
        content: |
          # Host configuration
          PORT=8080
          HOST=0.0.0.0
          HOST_URL=http://{{ hostvars['st-lb1'].ansible_host }}:8080
          COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
          NODE_ENV=development
          
          # Okta configuration
          OKTA_ORG_URL={{ oip }}
          OKTA_CLIENT_ID={{ oid }}
          OKTA_CLIENT_SECRET={{ ocs }}
          
          # Postgres configuration
          PGHOST={{ pgn }}-pg-f-server.postgres.database.azure.com
          PGUSERNAME={{ pgu }}
          PGDATABASE=postgres
          PGPASSWORD={{ pgp }}
          PGPORT=5432

    - name: fix npm symlink (broken after copying)
      shell: 'ln -sf ./node_modules/nodemon/bin/nodemon.js ./node_modules/.bin/nodemon'
      args:
        chdir: /home/{{ ansible_user }}/app
      ignore_unreachable: true
      ignore_errors: yes
      
    - name: install pm2
      shell: 'npm install pm2@latest -g '
      become: yes
      ignore_unreachable: true
      
    - name: npm run initdb
      shell: 'npm run initdb'
      args:
        chdir: /home/{{ ansible_user }}/app
      become: yes
      ignore_unreachable: true

    - name: clear all previous pm2 tasks
      shell: 'pm2 delete all'
      ignore_errors: yes

    - name: deploy app as service with pm 2
      shell: 'pm2 start npm --name "weight tracker" -- run dev'
      args:
        chdir: /home/{{ ansible_user }}/app

    - name: configure pm2 to run on startup
      shell: 'env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u {{ ansible_user }} --hp /home/{{ ansible_user }}'
      become: yes

    - name: pm2 save
      shell: 'pm2 save --force'
